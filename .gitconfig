[user]
  name = Aliaksandr Buhayeu
  email = aliaksandr.buhayeu@gmail.com
[color]
  ui = auto
[alias]
  co = checkout
  ci = commit
  st = status
  br = branch
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  di = diff -w --no-prefix
  df = diff
  dc = diff --cached
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls = ls-files

  # Show files ignored by git:
  ign = ls-files -o -i --exclude-standard
  meta-fs = !/opt/bin/git-meta-fs
	add-symlink = "!__git_add_symlink(){ dst=$(echo \"$2\")/../$(echo \"$1\"); if [ -e \"$dst\" ]; then hash=$(echo \"$1\" | git hash-object -w --stdin); git update-index --add --cacheinfo 120000 \"$hash\" \"$2\"; git checkout -- \"$2\"; else echo \"ERROR: Target $dst does not exist!\"; echo \"       Not creating invalid symlink.\"; fi; }; __git_add_symlink \"$1\" \"$2\""
	rm-symlink = "!__git_rm_symlink(){ git checkout -- \"$1\"; link=$(echo \"$1\"); POS=$'/'; DOS=$'\\\\\\\\'; doslink=${link//$POS/$DOS}; dest=$(dirname \"$link\")/$(cat \"$link\"); dosdest=${dest//$POS/$DOS}; if [ -f \"$dest\" ]; then rm -f \"$link\"; cmd //C mklink //H \"$doslink\" \"$dosdest\"; elif [ -d \"$dest\" ]; then rm -f \"$link\"; cmd //C mklink //J \"$doslink\" \"$dosdest\"; else echo \"ERROR: Something went wrong when processing $1 . . .\"; echo \"       $dest may not actually exist as a valid target.\"; fi; }; __git_rm_symlink \"$1\""
	rm-symlinks = "!__git_rm_symlinks(){ for symlink in `git ls-files -s | grep -E \"^120000\" | cut -f2`; do git rm-symlink \"$symlink\"; git update-index --assume-unchanged \"$symlink\"; done; }; __git_rm_symlinks"
	checkout-symlinks = "!__git_checkout_symlinks(){ POS=$'/'; DOS=$'\\\\\\\\'; for symlink in `git ls-files -s | grep -E \"^120000\" | cut -f2`; do git update-index --no-assume-unchanged \"$symlink\"; if [ -d \"$symlink\" ]; then dossymlink=${symlink//$POS/$DOS}; cmd //C rmdir //S //Q \"$dossymlink\"; fi; git  checkout -- \"$symlink\"; echo \"Restored git symlink $symlink <<===>> `cat $symlink`\"; done; }; __git_checkout_symlinks"

#[apply]
#  whitespace = nowarn
#[push]
#  default = tracking
#[rebase]
#  stat = yes
[push]
	default = simple

# EPAM
#[http]
#	sslverify = true
